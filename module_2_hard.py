# Дополнительное практическое задание по модулю: "Основные операторы"

# Задание "Слишком древний шифр":
# Вы отправились в путешествие на необитаемый остров и конечно же в очередной вылазке в джунгли вы попали в
# ловушку местному племени (да-да, классика "Индиана Джонса").
# К вашему удивлению, в племени были неплохие математики и по совместительству фантазёры.
# Вы поняли это, когда после долгих блужданий перед вами появились ворота (выход из ловушки) с двумя каменными
# вставками для чисел.
# В первом поле камни с числом менялись постоянно (от 3 до 20) случайным образом, а второе было всегда пустым.
# К вашему счастью рядом с менее успешными и уже неговорящими путешественниками находился папирус,
# где были написаны правила для решения этого "ребуса". (Как жаль, что они поняли это так поздно :( ).
# Во вторую вставку нужно было написать те пары чисел друг за другом, чтобы число из первой вставки было
# кратно(делилось без остатка) сумме их значений.
# Составьте алгоритм, используя циклы, чтобы в независимости от введённого числа n (от 3 до 20)
# программа выдавала нужный пароль result, для одного введённого числа.

import random

first_insert = range(3, 20)
n = random.choice(first_insert)
result = str()
for i in range(1, n + 1):
    for j in range(1, n + 1):
        if n % j == 0:
            a = i
            b = j - i
            if a != b and a > 0 and b > 0 and result.find(str(",") + str(b) + str(",") + str(a) + str(",")) == -1:
                result = result + str(",") + str(a) + str(",") + str(b) + str(",")
print(n, " - ", result.replace(",", ""))
